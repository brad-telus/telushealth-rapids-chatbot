steps:
  - id: 'Stamp version'
    name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args:
      - 'scripts/version.sh'
    env:
      - BRANCH_NAME=${_BRANCH_NAME}
      - BRANCH_TAG=${_BRANCH_TAG}
      - MAIN_DOMAIN=${_MAIN_DOMAIN}
      - RAPIDS_VERTICAL_NAME=${_RAPIDS_VERTICAL_NAME}
      - FULLY_QUALIFIED_DOMAIN=${_FULLY_QUALIFIED_DOMAIN}
      - SHORT_SHA=${SHORT_SHA}

  - id: 'Install Chatbot dependencies'
    name: ${_BUILD_NAME}
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Installing dependencies" &&
        npx google-artifactregistry-auth --repo-config=.npmrc --credential-config=.npmrc &&
        npm install -g pnpm@9.12.3 &&
        # Use frozen lockfile for faster, deterministic installs
        pnpm install --prod=false --frozen-lockfile --prefer-frozen-lockfile
    env:
      # Enable pnpm store caching
      - PNPM_CACHE_FOLDER=/workspace/.pnpm-store
    waitFor:
      - 'Stamp version'

  - id: 'Build Chatbot service'
    name: ${_BUILD_NAME}
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g pnpm@9.12.3 &&
        # Use optimized build with increased memory and faster settings
        export NODE_OPTIONS="--max-old-space-size=8192 --max-semi-space-size=256" &&
        export UV_THREADPOOL_SIZE=32 &&
        # Use the optimized build script
        pnpm next:build
    env:
      - RAPIDS_PROJECT_ID=${_RAPIDS_PROJECT_ID}
      - NODE_ENV=production
      # Enable pnpm store caching
      - PNPM_CACHE_FOLDER=/workspace/.pnpm-store
    waitFor:
      - 'Install Chatbot dependencies'

  - id: 'Build chatbot image'
    name: gcr.io/kaniko-project/executor
    args:
      - --destination=${_IMAGE_BASE}rx:${_RAPIDS_VERTICAL_NAME}
      - --destination=${_IMAGE_BASE}rx:${SHORT_SHA}
    waitFor:
      - 'Build Chatbot service'

  - id: 'Deploy as /rx'
    name: gcr.io/cloud-builders/gcloud
    entrypoint: 'scripts/deploy.sh'
    args: [ "rx" ]
    env:
      - RAPIDS_PROJECT_ID=${_RAPIDS_PROJECT_ID}
      - IMAGE_NAME=${_IMAGE_BASE}rx:${_RAPIDS_VERTICAL_NAME}
      - FULLY_QUALIFIED_DOMAIN=${_FULLY_QUALIFIED_DOMAIN}
      - RAPIDS_VERTICAL_NAME=${_RAPIDS_VERTICAL_NAME}
      - LOAD_BALANCER_VERSION=${_LOAD_BALANCER_VERSION}
    waitFor:
      - 'Build chatbot image'

logsBucket: "gs://${_COMMON_PROJECT_ID}-build-reports/build-logs/telushealth-rapids-chatbot"
options:
  logging: GCS_ONLY
  machineType: E2_HIGHCPU_32
  # Add volume mounts for caching
  volumes:
    - name: 'pnpm-cache'
      path: '/workspace/.pnpm-store'
    - name: 'next-cache'
      path: '/workspace/.next/cache'
  env:
    - NODE_ENV=production
    - ENABLE_FORGEROCK_AUTH=true
timeout: '1200s'
substitutions:
  _IMAGE_BASE: northamerica-northeast1-docker.pkg.dev/${_COMMON_PROJECT_ID}/docker-builds/
  _BUILD_NAME: northamerica-northeast1-docker.pkg.dev/${_COMMON_PROJECT_ID}/docker-builds/rapids-builder
